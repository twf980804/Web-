web服务器

1.
    客户端:                          |   服务器
    1.                              |    1.
    在浏览器其中输入URL                |     接收客户端连接
    建立网络连接                       |     接收数据
    发送数据(http封装)                 |    解析数据(http协议)
                                     |    找到服务器目录中对应的资源(找到|不存在)
                                     |    IO流打开对应文件,按照http协议封装数据,传回去
    2接收服务器返回的数据,然后默认方式处理. |


2.URL:统一资源定位符Uniform Resource Locator

3.request:请求,从客户端到服务端的请求消息

    1.请求行:Method Request-URI HTTP-Version CRLF
        Method表示请求方法；一般为GET或者POST
        			Request-URI是一个统一资源标识符；
        			HTTP-Version表示请求的HTTP协议版本；
        			CRLF表示回车和换行
    2.请求头:消息报头 http header
        网络连接,数据传输属性信息
        如:
        	GET /a.txt HTTP/1.1
            Host: 127.0.0.1:9999
            Connection: keep-alive
            Upgrade-Insecure-Requests: 1
            User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.109 Safari/537.36
            Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
            Accept-Encoding: gzip, deflate, br
            Accept-Language: zh-CN,zh;q=0.9
            //有一个空行(规定了消息头和请求体之间有一个空行)
    3.请求体:请求正文:http body
        请求头和请求正文之间是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。请求正文中可以包含客户提交的字符串信息

        		注意:在第二部分header和第三部分body之间有个空行,除非没有请求正文

4.response响应:服务器在接收和解释客户端的请求消息后，服务器会返回给客户端一个HTTP响应消息,我们称之为响应(response)。
    HTTP响应也是由三个部分组成， 响应状态行、消息报头、响应正文
    第一部分 响应状态行
    		格式如下：
    		HTTP-Version Status-Code Reason-Phrase CRLF

    		各部分分别为：
    		HTTP-Version表示服务器HTTP协议的版本；
    		Status-Code表示服务器发回的响应状态代码；
    			参照: http协议状态码.txt 文档
    		Reason-Phrase表示状态代码的文本描述。
    		CRLF表示回车和换行
    第二部分 消息报头
    		参照: http消息报头.txt 文档
    		什么是 MIME Type?媒体类型
    		首先，我们要了解浏览器是如何处理内容的。在浏览器中显示的内容有 HTML、有 XML、有 GIF、还有 Flash ……
    		那么，浏览器是如何区分它们，决定什么内容用什么形式来显示呢？答案是 MIME Type，也就是该资源的媒体类型。
    		媒体类型通常是通过 HTTP 协议，由 Web 服务器告知浏览器的，
    		更准确地说，是通过响应的消息报头里面的属性 Content-Type 来表示的，例如:Content-Type: text/HTML
    第三部分 响应正文
    		响应正文就是服务器返回的资源的内容

项目步骤:
第一步:
    启动服务器

第二步:
    在浏览器中输入固定格式的URL(http://ip:port/资源路径名)

第三步:
    浏览器将地址信息封装成符合http协议的数据包,通过网络发送给服务器

第四步:
    服务器接收连接请求,接收到固定格式的请求消息(request)
    数据解析,获取url

第五步:
    处理 请求,资源如果存在,返回响应信息,如果不存在,返回404,响应消息要符合http协议
    {
    响应行:HTTP/1.1 200 OK
          HTTP/1.1 404 NotFound
    消息头 空白
    空行    /r/n
    消息体 文件内容
    }


响应处理:
   1. 准备流(服务器发送数据给浏览器socket.getOutputStream)
   (1)如果文件存在
        (将文件内容发送给浏览器)
        按照http协议发送即
            响应行
            消息头(可以为空,不写)
            /r/n
            消息体(文件具体内容)
                准备文件流读取文件内容(字节数组读取,缓冲流包装)
                将读取到的内容发送给浏览器

    (2)如果文件不存在
        (发送error.html文件)
            准备error.html,内容为404,NotFound

http://localhost:9999
http://127.0.0.1:9999


